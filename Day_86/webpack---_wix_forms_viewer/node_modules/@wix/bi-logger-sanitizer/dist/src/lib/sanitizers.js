"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.hashString = exports.sanitizePII = exports.sanitizePhone = exports.sanitizeEmail = void 0;
// import {parse, format, CountryCode} from 'libphonenumber-js';
var hashers_1 = require("./hashers");
var validators_1 = require("./validators");
var replacers_1 = require("./replacers");
/**
 * Sanitizes an email.
 *
 * @param email email to sanitize
 */
function sanitizeEmail(email) {
    if (!(0, validators_1.validateEmail)(email)) {
        return email;
    }
    return (0, hashers_1.hashEmail)(email);
}
exports.sanitizeEmail = sanitizeEmail;
/**
 * Sanitizes a phone number by scrambling the last 5 digits.
 *
 * @param phone phone to sanitize
 */
function sanitizePhone(phone) {
    if (!(0, validators_1.validatePhone)(phone)) {
        return phone;
    }
    return (0, hashers_1.hashPhone)(phone);
}
exports.sanitizePhone = sanitizePhone;
/**
 * Normalizes the phone number according to https://en.wikipedia.org/wiki/E.164 and sanitizes it.
 *
 * @param phone             phone to sanitize
 * @param phoneCountryCode  phone country code
 */
// export function normalizeAndSanitizePhone(phone: string, phoneCountryCode: CountryCode) {
//   const parsed = parse(phone, phoneCountryCode);
//   if (!parsed.phone) {
//     return phone;
//   }
//   const formatted = format(parsed, 'International_plaintext');
//   return sanitizePhone(formatted);
// }
/**
 * Sanitizes text that might contain PII values.
 * Currently removes email addresses.
 *
 * @param text text to sanitize
 */
function sanitizePII(text) {
    if (!(0, validators_1.validateString)(text)) {
        return text;
    }
    return (0, replacers_1.replaceEmails)(text, function(email) {
        return (0, hashers_1.hashEmail)(email);
    });
}
exports.sanitizePII = sanitizePII;
/**
 * Hashes a string.
 *
 * @param str string to hash
 */
function hashString(str) {
    if (!(0, validators_1.validateString)(str)) {
        return str;
    }
    return (0, hashers_1.digest)(str);
}
exports.hashString = hashString;
//# sourceMappingURL=sanitizers.js.map