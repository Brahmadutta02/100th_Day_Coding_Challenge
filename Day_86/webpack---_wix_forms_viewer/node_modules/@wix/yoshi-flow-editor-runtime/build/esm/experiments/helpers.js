var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
export var getRequestContext = function(ctx, overrideCriteria) {
    var context = {};
    if (ctx.visitorId) {
        context.forSiteVisitors = __assign(__assign({}, ctx), {
            visitorId: ctx.visitorId
        });
    } else {
        context.forSiteOwner = __assign(__assign({}, ctx), {
            loggedInUserId: ctx.loggedInUserId
        });
    }
    if (overrideCriteria) {
        context.overrideCriteria = overrideCriteria;
    }
    return context;
};
//# sourceMappingURL=helpers.js.map