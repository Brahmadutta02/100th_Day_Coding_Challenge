var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
// import type { VisitorLogger } from '@wix/yoshi-flow-editor/external-types/bi';
import {
    pickFunctions,
    pickKeys
} from '../utils';
export var biLoggerProps = function(logger) {
    return {
        biMethods: logger ?
            __assign(__assign({}, pickFunctions(logger)), pickKeys(logger, ['report'])) :
            {},
        biUtil: logger && logger.util ? pickFunctions(logger.util) : {},
    };
};
export var biLoggerFromProps = function(_a) {
    var biMethods = _a.biMethods,
        biUtil = _a.biUtil;
    return __assign(__assign({}, biMethods), {
        util: biUtil
    });
};
//# sourceMappingURL=biLoggerProp.js.map