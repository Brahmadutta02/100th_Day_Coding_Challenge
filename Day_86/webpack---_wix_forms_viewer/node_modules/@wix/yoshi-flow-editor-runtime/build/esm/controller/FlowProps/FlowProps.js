var propsMap = {
    language: '_language',
    translations: '_translations',
    multilingual: '_multilingual',
    experiments: '_experiments',
    biMethods: '_biMethods',
    openModal: '__openModal__',
    biUtil: '_biUtil',
    mobile: '_mobile',
    isRTL: '_isRTL',
    isSSR: '_isSSR',
    isSEO: '_isSEO',
    appDefinitionId: '_appDefinitionId',
    widgetId: '_widgetId',
    fedopsLogger: '_fedopsLogger',
    sentry: '_sentry',
    errorMonitor: '_errorMonitor',
    publicData: '_publicData',
    styles: '__styles',
    enabledHOCs: '_enabledHOCs',
    onAppLoaded: '_onAppLoaded',
    error: '_workerError',
};
var FlowProps = /** @class */ (function() {
    function FlowProps() {
        this.store = {};
    }
    FlowProps.prototype.init = function() {};
    FlowProps.prototype.getProps = function() {
        return this.store;
    };
    FlowProps.prototype.getProp = function(key) {
        var privateKey = this.getPrivateKey(key);
        return this.store[privateKey];
    };
    FlowProps.prototype.spreadProp = function(key) {
        var _a;
        var privateKey = this.getPrivateKey(key);
        return _a = {}, _a[privateKey] = this.store[privateKey], _a;
    };
    FlowProps.prototype.getPrivateKey = function(key) {
        return FlowProps.PropsMap[key];
    };
    FlowProps.prototype.getFromExternalStore = function(key, store) {
        var privateKey = this.getPrivateKey(key);
        return store[privateKey];
    };
    FlowProps.prototype.setProp = function(key, value) {
        var privateKey = this.getPrivateKey(key);
        // @ts-expect-error
        this.store[privateKey] = value;
    };
    FlowProps.prototype.isHOCEnabled = function(hocName) {
        return this.getProp('enabledHOCs')[hocName];
    };
    FlowProps.prototype.isFlowPropsReceived = function() {
        return !!this.getProp('enabledHOCs');
    };
    FlowProps.PropsMap = propsMap;
    return FlowProps;
}());
export {
    FlowProps
};
//# sourceMappingURL=FlowProps.js.map