var __extends = (this && this.__extends) || (function() {
    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({
                    __proto__: []
                }
                instanceof Array && function(d, b) {
                    d.__proto__ = b;
                }) ||
            function(d, b) {
                for (var p in b)
                    if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
            };
        return extendStatics(d, b);
    };
    return function(d, b) {
        extendStatics(d, b);

        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __rest = (this && this.__rest) || function(s, e) {
    var t = {};
    for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import {
    multilingualProp
} from '../multilingualProp';
import {
    createErrorMonitorProp
} from '../errorMonitorProp';
import {
    fedopsLoggerProp
} from '../fedopsLoggerProp';
import {
    createSentryProp
} from '../sentryProp';
import {
    workerErrorProp
} from '../workerErrorProp';
import {
    biLoggerProps
} from '../biLoggerProp';
import {
    publicDataProp
} from '../publicDataProp';
import {
    FlowProps
} from './FlowProps';
var FlowPropsProvider = /** @class */ (function(_super) {
    __extends(FlowPropsProvider, _super);

    function FlowPropsProvider(_a) {
        var flowAPI = _a.flowAPI,
            configs = __rest(_a, ["flowAPI"]);
        var _this = _super.call(this) || this;
        _this.isCSRLoaded = false;
        _this.onAppLoadedProp = function() {
            var _a;
            if (!_this.isCSRLoaded) {
                (_a = _this.flowAPI.fedops) === null || _a === void 0 ? void 0 : _a.appLoaded();
                _this.isCSRLoaded = true;
            }
        };
        _this.setPublicData = function(publicData) {
            _this.setProp('publicData', publicDataProp(publicData));
        };
        _this.flowAPI = flowAPI;
        _this.initControllerProps(configs);
        return _this;
    }
    FlowPropsProvider.prototype.initControllerProps = function(_a) {
        var _b, _c, _d, _e;
        var translationsConfig = _a.translationsConfig,
            experimentsConfig = _a.experimentsConfig;
        var flowAPI = this.flowAPI;
        // Translations
        this.setProp('translations', (_c = (_b = flowAPI.translations) === null || _b === void 0 ? void 0 : _b.all) !== null && _c !== void 0 ? _c : {});
        this.setProp('openModal', flowAPI.openModal.bind(flowAPI));
        this.setProp('multilingual', multilingualProp(flowAPI.environment.multilingual));
        // Experiments
        this.setProp('experiments', (_e = (_d = flowAPI.experiments) === null || _d === void 0 ? void 0 : _d.all()) !== null && _e !== void 0 ? _e : {});
        // BI
        var _f = biLoggerProps(flowAPI.bi),
            biMethods = _f.biMethods,
            biUtil = _f.biUtil;
        this.setProp('biMethods', biMethods);
        this.setProp('biUtil', biUtil);
        // Environment
        this.setProp('language', flowAPI.environment.language);
        this.setProp('isRTL', flowAPI.environment.isRTL);
        this.setProp('isSSR', flowAPI.environment.isSSR);
        this.setProp('isSEO', flowAPI.environment.isSEO);
        this.setProp('mobile', flowAPI.environment.isMobile);
        this.setProp('appDefinitionId', flowAPI.environment.appDefinitionId);
        this.setProp('widgetId', flowAPI.environment.widgetId);
        // Fedops
        this.setProp('fedopsLogger', flowAPI.fedops != null ? fedopsLoggerProp(flowAPI.fedops) : null);
        // Sentry
        this.setProp('sentry', flowAPI.sentry != null ? createSentryProp(flowAPI.sentry) : null);
        // Error Monitor
        this.setProp('errorMonitor', flowAPI.errorMonitor != null ?
            createErrorMonitorProp(flowAPI.errorMonitor) :
            null);
        // Settings (Public Data)
        this.setPublicData(flowAPI.controllerConfig.config.publicData);
        // Enabled features
        this.setProp('enabledHOCs', {
            translations: (translationsConfig === null || translationsConfig === void 0 ? void 0 : translationsConfig.enabled) !== false,
            experiments: !!experimentsConfig,
            bi: !!flowAPI.bi,
            sentry: !!flowAPI.sentry,
            errorMonitor: !!flowAPI.errorMonitor,
            fedops: !!flowAPI.fedops,
        });
        // CSR Loaded handler
        this.setProp('onAppLoaded', this.onAppLoadedProp);
        // Initial Error State
        this.setProp('error', null);
    };
    FlowPropsProvider.prototype.setErrorProp = function(error, errorId) {
        this.setProp('error', error ? workerErrorProp(error, errorId) : null);
    };
    FlowPropsProvider.prototype.passWidgetProp = function(key) {
        this.flowAPI.controllerConfig.setProps(this.spreadProp(key));
    };
    FlowPropsProvider.prototype.passWidgetErrorProp = function(controllerError, controllerErrorId) {
        this.setErrorProp(controllerError, controllerErrorId);
        this.flowAPI.controllerConfig.setProps(this.spreadProp('error'));
    };
    FlowPropsProvider.prototype.passWidgetInitialProps = function() {
        this.flowAPI.controllerConfig.setProps(this.getProps());
    };
    return FlowPropsProvider;
}(FlowProps));
export {
    FlowPropsProvider
};
//# sourceMappingURL=FlowPropsProvider.js.map