var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new(P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }

        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }

        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function(thisArg, body) {
    var _ = {
            label: 0,
            sent: function() {
                if (t[0] & 1) throw t[1];
                return t[1];
            },
            trys: [],
            ops: []
        },
        f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;

    function verb(n) {
        return function(v) {
            return step([n, v]);
        };
    }

    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [0];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [6, e];
            y = 0;
        } finally {
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
};
import {
    getEditorParams as _getEditorParams,
    isEditor as _isEditor,
    getQueryParams as _getQueryParams,
} from './publicUtils';
// from an object of promises to a promise of an object
export function objectPromiseAll(target) {
    var _this = this;
    return Object.keys(target).reduce(function(acc, key) {
        return __awaiter(_this, void 0, void 0, function() {
            var obj, _a, _b;
            var _c;
            return __generator(this, function(_d) {
                switch (_d.label) {
                    case 0:
                        return [4 /*yield*/ , acc];
                    case 1:
                        obj = _d.sent();
                        _a = [__assign({}, obj)];
                        _c = {};
                        _b = key.replace('Promise', '');
                        return [4 /*yield*/ , target[key]];
                    case 2:
                        return [2 /*return*/ , __assign.apply(void 0, _a.concat([(_c[_b] = _d.sent(), _c)]))];
                }
            });
        });
    }, Promise.resolve({}));
}
export * from './createInstances';
export var loadScript = function(scriptSrc) {
    return new Promise(function(resolve) {
        var script = document.createElement('script');
        script.src = scriptSrc;
        script.async = false;
        script.onload = resolve;
        document.body.appendChild(script);
    });
};
// TODO: Remove from the root export in the next major release
export var getEditorParams = _getEditorParams;
export var isEditor = _isEditor;
export var getQueryParams = _getQueryParams;
var dataCallback = function(data) {
    return data;
};
export var buildSentryOptions = function(_a) {
    var dsn = _a.dsn,
        environment = _a.environment,
        artifact = _a.artifact,
        withDataCallback = _a.withDataCallback,
        tags = _a.tags;
    return {
        dsn: dsn,
        config: {
            // This function will be never called if sentry is not enabled
            enabled: true,
            release: artifact,
            dataCallback: withDataCallback ? dataCallback : undefined,
            environment: environment,
            tags: tags,
        },
    };
};
export var getArtifact = function() {
    return process.env.ARTIFACT_VERSION;
};
export var pickFunctions = function(object) {
    var result = {};
    for (var key in object) {
        if (typeof object[key] === 'function') {
            result[key] = object[key].bind(object);
        }
    }
    return result;
};
export var pickKeys = function(object, keys) {
    var result = {};
    var _loop_1 = function(key) {
        var maybeFunction = object[key];
        if (typeof maybeFunction === 'function') {
            result[key] = function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                return maybeFunction.apply(object, args);
            };
        }
    };
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        _loop_1(key);
    }
    return result;
};
export var getMultilingualLanguage = function(multilingual) {
    return multilingual.isEnabled && multilingual.currentLanguage ?
        multilingual.currentLanguage :
        undefined;
};
export var getEditorBIOrigin = function(isADI, environment) {
    if (isADI) {
        return 'ADI';
    }
    if (environment.isEditorX) {
        return 'editor_x';
    }
    return 'editor';
};
export var parseJwt = function(token) {
    var base64 = token.split('.')[1].replace(/-/g, '+').replace(/_/g, '/');
    var jsonPayload = decodeURIComponent(atob(base64)
        .split('')
        .map(function(c) {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        })
        .join(''));
    return JSON.parse(jsonPayload);
};
export var getPublicPath = function() {
    return typeof __webpack_public_path__ !== 'undefined' ?
        __webpack_public_path__ :
        undefined;
};
//# sourceMappingURL=utils.js.map