import {
    isWixHttpError
} from './isWixHttpError';
import {
    isAxiosError
} from './isAxiosError';
export function extractDetailsFromHttpErrors(error) {
    if (!error || !error.config) {
        return {
            error: error ? JSON.stringify(error) : 'error is empty',
        };
    }
    const isWixError = isWixHttpError(error);
    const isAxios = isAxiosError(error);
    if (isWixError || isAxios) {
        return Object.assign(Object.assign({
            isWixHttpError: isWixError,
            requestId: error.requestId
        }, (error.config && {
            requestConfig: Object.assign(Object.assign({
                url: error.config.url,
                method: error.config.method
            }, (error.config.params && {
                params: JSON.stringify(error.config.params),
            })), (error.config.data && {
                data: JSON.stringify(error.config.data),
            })),
        })), ((error === null || error === void 0 ? void 0 : error.response) && {
            response: Object.assign({
                status: error.response.status,
                statusText: error.response.statusText
            }, (error.response.data && {
                data: JSON.stringify(error.response.data),
            })),
        }));
    }
}
//# sourceMappingURL=extractDetailsFromHttpErrors.js.map