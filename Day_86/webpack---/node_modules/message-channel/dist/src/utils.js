'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.parseConnectionMessage = exports.constructConnectionMessage = exports.parseChannelMessage = exports.constructChannelMessage = undefined;

var _constants = require('./constants');

var constructChannelMessage = exports.constructChannelMessage = function constructChannelMessage(payload, id) {
    if (!id) {
        return payload;
    }

    return id + _constants.messageDelimiter + payload;
};

var parseChannelMessage = exports.parseChannelMessage = function parseChannelMessage(message) {
    var firstDelimiterIndex = message.indexOf(_constants.messageDelimiter);
    if (firstDelimiterIndex === -1) {
        return {
            id: null,
            payload: message
        };
    }

    var id = message.slice(0, firstDelimiterIndex);
    var payload = message.slice(firstDelimiterIndex + 1);
    return {
        id: id,
        payload: payload
    };
};

var constructConnectionMessage = exports.constructConnectionMessage = function constructConnectionMessage(scope) {
    return _constants.connectionRequestMsg + _constants.messageDelimiter + scope;
};

var parseConnectionMessage = exports.parseConnectionMessage = function parseConnectionMessage(message) {
    var firstDelimiterIndex = message.indexOf(_constants.messageDelimiter);
    if (firstDelimiterIndex === -1 || message.slice(0, firstDelimiterIndex) !== _constants.connectionRequestMsg) {
        throw new Error('Invalid connection message');
    }

    var scope = message.slice(firstDelimiterIndex + 1);
    return scope;
};