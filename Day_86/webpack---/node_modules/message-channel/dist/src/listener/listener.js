'use strict';

var _constants = require('../constants');

var _utils = require('../utils');

var _listenFactory = require('./listen-factory');

var _listenFactory2 = _interopRequireDefault(_listenFactory);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

function isMessageRelevant(message, scope) {
    try {
        return (0, _utils.parseConnectionMessage)(message) === scope;
    } catch (e) {
        return false;
    }
}

function getMessagePort(e) {
    try {
        return e.ports[0];
    } catch (e) {}
}

function authorizeConnection(port) {
    port.postMessage(_constants.connectionSuccessMsg);
}

var noop = function noop() {};

function listener(scope) {
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;

    if (!scope || typeof scope !== 'string') {
        throw new Error('listener function expects to recieve a scope<string> as a first argument');
    }

    var _listener = function _listener(e) {
        if (isMessageRelevant(e.data, scope)) {
            var port = getMessagePort(e);
            if (port) {
                authorizeConnection(port);
                (0, _listenFactory2.default)(port, callback);
            }
        }
    };

    window.addEventListener('message', _listener);
    return function() {
        return window.removeEventListener('message', _listener);
    };
}

module.exports = listener;