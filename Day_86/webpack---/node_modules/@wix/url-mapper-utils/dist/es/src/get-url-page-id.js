import {
    getUrlPath,
    getLegacyUrlSegments,
    sortUrlMappingsSegments,
} from './utils';
import {
    getMatchedMapping
} from './get-matched-mapping';
export var getUrlPageId = function(urlMappings, tpaPageIds, url) {
    var _a, _b, _c;
    if (urlMappings === void 0) {
        urlMappings = {
            main: []
        };
    }
    var urlPath = getUrlPath(url);
    var matchedKey = (getLegacyUrlSegments(urlMappings, urlPath) || {}).key;
    var sortedMappings = (_a = urlMappings === null || urlMappings === void 0 ? void 0 : urlMappings.main) === null || _a === void 0 ? void 0 : _a.map(function(urlMapping) {
        return urlMapping.mapping || '';
    }).sort(sortUrlMappingsSegments);
    var matchedMapping = getMatchedMapping(sortedMappings, urlPath);
    var tpaPageId = (_c = (_b = urlMappings === null || urlMappings === void 0 ? void 0 : urlMappings.main) === null || _b === void 0 ? void 0 : _b.find(function(_a) {
        var mapping = _a.mapping,
            key = _a.key;
        return mapping === matchedMapping || key === matchedKey;
    })) === null || _c === void 0 ? void 0 : _c.pageIdentifier;
    return (tpaPageId && tpaPageIds[tpaPageId]) || '';
};
//# sourceMappingURL=get-url-page-id.js.map