import {
    editorConventions,
    editorBundlesConfig
} from './editor';
import {
    editorXBundlesConfig,
    editorXConventions
} from './editorX';
import {
    dataBindingBundlesConfig,
    dataBindingConventions,
} from './dataBinding';
import {
    documentManagementBundlesConfig,
    documentManagementConventions,
} from './documentManagement';
import {
    corvidBundlesConfig,
    corvidConventions
} from './corvid';
import {
    thunderboltPreviewBundlesConfig,
    thunderboltPreviewConventions,
} from './thunderboltPreview';
import {
    siteAssetsBundlesConfig,
    siteAssetsConventions
} from './siteAssets';
import {
    thunderboltConventions,
    thunderboltBundlesConfig,
} from './thunderbolt';
import {
    autoCompleteBundlesConfig,
    autoCompleteConventions,
} from './autoComplete';
export const hostsConventions = {
    corvid: corvidConventions,
    editor: editorConventions,
    editorX: editorXConventions,
    documentManagement: documentManagementConventions,
    thunderboltPreview: thunderboltPreviewConventions,
    siteAssets: siteAssetsConventions,
    dataBinding: dataBindingConventions,
    thunderbolt: thunderboltConventions,
    autoComplete: autoCompleteConventions,
};
export const hostsBundlesConfigs = {
    corvid: corvidBundlesConfig,
    editor: editorBundlesConfig,
    editorX: editorXBundlesConfig,
    documentManagement: documentManagementBundlesConfig,
    thunderboltPreview: thunderboltPreviewBundlesConfig,
    siteAssets: siteAssetsBundlesConfig,
    dataBinding: dataBindingBundlesConfig,
    thunderbolt: thunderboltBundlesConfig,
    autoComplete: autoCompleteBundlesConfig,
};
const stylableMetadataAsset = {
    pattern: /\.metadata\.json$/,
    type: 'stylable-metadata',
};
export const hostsPatterns = {
    editor: conventionToPatterns(corvidConventions),
    editorX: conventionToPatterns(editorXConventions),
    corvid: conventionToPatterns(corvidConventions),
    siteAssets: conventionToPatterns(siteAssetsConventions),
    thunderbolt: conventionToPatterns(thunderboltConventions),
    thunderboltPreview: conventionToPatterns(thunderboltPreviewConventions),
    documentManagement: conventionToPatterns(documentManagementConventions),
    dataBinding: conventionToPatterns(dataBindingConventions),
    autoComplete: conventionToPatterns(autoCompleteConventions),
};
export const hostAssets = {
    thunderbolt: [stylableMetadataAsset],
    thunderboltPreview: [stylableMetadataAsset],
};
export function replacePatternPlaceholders(pattern, placeholders = {}) {
    return pattern.replace(/%([^%]+)%/g, (_, id) => {
        return placeholders[id] ? placeholders[id] : '*';
    });
}

function conventionToPatterns(convention) {
    var _a;
    const patterns = [];
    if (convention.path) {
        patterns.push(convention.path);
    }
    (_a = convention.patterns) === null || _a === void 0 ? void 0 : _a.forEach(({
        path
    }) => {
        patterns.push(path);
    });
    return patterns;
}
//# sourceMappingURL=index.js.map