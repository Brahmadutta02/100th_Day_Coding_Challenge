"use strict";
(self.webpackJsonp__wix_thunderbolt_app = self.webpackJsonp__wix_thunderbolt_app || []).push([
    [3001], {
        3001: function(e, r, t) {
            t.r(r), t.d(r, {
                TpaWorkerSymbol: function() {
                    return c.m
                },
                editor: function() {
                    return C
                },
                site: function() {
                    return b
                }
            });
            var o = t(97478),
                n = t(59032),
                p = t(43757),
                a = t(61049),
                i = t(55048),
                s = t(26513),
                u = t(20140),
                c = t(54163),
                d = t(44263);
            const l = new RegExp("^tpaWorker_([0-9]+)$"),
                f = e => l.test(e),
                k = e => {
                    var r;
                    return null === (r = l.exec(e)) || void 0 === r ? void 0 : r[1]
                },
                g = e => `tpaWorker_${e}`,
                m = ({
                    tpaContextMapping: e,
                    props: r,
                    tpaSrcBuilder: t,
                    structureApi: o,
                    workerId: n,
                    appDefinitionId: p,
                    appWorkerUrl: a,
                    appDefinitionName: i
                }) => {
                    e.registerTpasForContext({
                        contextId: "masterPage",
                        pageId: "masterPage"
                    }, [n]), r.update({
                        [n]: {
                            title: i,
                            src: t.buildSrc(n, "masterPage", {}, a, {
                                extraQueryParams: {
                                    endpointType: "worker"
                                },
                                appDefinitionId: p
                            })
                        }
                    }), o.addComponentToDynamicStructure(n, {
                        components: [],
                        componentType: "TPAWorker"
                    })
                },
                x = ({
                    structureApi: e,
                    workerId: r,
                    tpaContextMapping: t
                }) => {
                    e.removeComponentFromDynamicStructure(r), t.unregisterTpa(r)
                },
                W = (0, p.ff)([(0, p.t6)(a.R9, c.u), i.QZ, i.xP, u.RN, u.ex, s.jj], (({
                    tpaWorkers: e
                }, r, t, o, n, p) => {
                    const {
                        resolver: a,
                        promise: i
                    } = (0, d.w)();
                    return {
                        name: "tpaWorker",
                        appDidMount() {
                            i.then((() => Object.entries(e).forEach((([e, p]) => {
                                const a = g(e);
                                m(Object.assign({
                                    tpaContextMapping: n,
                                    props: t,
                                    tpaSrcBuilder: o,
                                    structureApi: r,
                                    workerId: a
                                }, p))
                            }))))
                        },
                        appWillLoadPage() {
                            p.getCurrentRouteInfo() && a()
                        },
                        getWorkerDetails(r) {
                            const t = k(r);
                            return e[t]
                        },
                        isTpaWorker: f
                    }
                })),
                w = (0, p.ff)([(0, p.t6)(a.R9, c.u)], (({
                    tpaWorkers: e
                }) => ({
                    getWorkerDetails(r) {
                        const t = k(r);
                        return e[t]
                    },
                    isTpaWorker: f
                }))),
                h = (0, p.ff)([i.QZ, i.xP, u.RN, u.ex], ((e, r, t, o) => {
                    let n = new Set;
                    return {
                        featureName: c.u,
                        handlers: {
                            handleTpaWorkersChange: p => {
                                const a = new Set;
                                Object.entries(p).forEach((([p, i]) => {
                                    const s = g(p);
                                    n.has(s) || m(Object.assign({
                                        tpaContextMapping: o,
                                        props: r,
                                        tpaSrcBuilder: t,
                                        structureApi: e,
                                        workerId: s
                                    }, i)), a.add(s)
                                }));
                                for (const t of n) a.has(t) || x({
                                    tpaContextMapping: o,
                                    props: r,
                                    structureApi: e,
                                    workerId: t
                                });
                                n = a
                            }
                        }
                    }
                })),
                b = e => {
                    e(n.j.AppDidMountHandler, n.j.AppWillLoadPageHandler, c.m).to(W)
                },
                C = e => {
                    e(c.m).to(w), e(o.ZK).to(h)
                }
        }
    }
]);
//# sourceMappingURL=https://static.parastorage.com/services/wix-thunderbolt/dist/group_46.6d67993e.chunk.min.js.map