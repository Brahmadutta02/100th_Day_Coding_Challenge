import {
    __read
} from "tslib";
import {
    getUrlMappingVariablesSchemaByKey,
} from './types';
import {
    insertMainMappingToSubMappings
} from './insert-main-mapping-to-sub-mappings';
export var getSubUrlMappings = function(urlMapping) {
    if (!urlMapping) {
        throw new Error('Can not get sub url mappings of invalid url mapping');
    }
    var key = urlMapping.key,
        mapping = urlMapping.mapping,
        pageIdentifier = urlMapping.pageIdentifier,
        pageIdentifierType = urlMapping.pageIdentifierType;
    var subMappings = (getUrlMappingVariablesSchemaByKey(key) || {}).subMappings;
    return Object.entries(subMappings || {}).map(function(_a) {
        var _b = __read(_a, 2),
            subMappingKey = _b[0],
            subMapping = _b[1];
        return ({
            key: subMappingKey,
            mapping: insertMainMappingToSubMappings(mapping, subMapping === null || subMapping === void 0 ? void 0 : subMapping.defaultMapping),
            pageIdentifier: pageIdentifier,
            pageIdentifierType: pageIdentifierType,
        });
    });
};
//# sourceMappingURL=get-sub-url-mappings.js.map