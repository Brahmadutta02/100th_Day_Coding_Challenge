"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createRegistryInstanceCache = void 0;
const utils_1 = require("../utils");

function createRegistryInstanceCache({
    cache = new Map(),
} = {}) {
    const pending = new Map();
    return {
        async getRegistryAPI({
            libraries,
            factory,
            shouldCache = true,
        }) {
            const normalized = libraries
                .map(library => {
                    if (library.hasOwnProperty('version') &&
                        library.hasOwnProperty('host')) {
                        return {
                            url: library.baseURL,
                            namespace: library.namespace,
                        };
                    } else {
                        return library;
                    }
                })
                .sort((a, b) => (a.namespace > b.namespace ? 1 : -1));
            const key = JSON.stringify(normalized);
            if (cache.has(key)) {
                return cache.get(key);
            }
            if (pending.has(key)) {
                return pending.get(key);
            }
            try {
                pending.set(key, factory());
                const withLocalURLs = normalized.some(library => {
                    return utils_1.LOCAL_DEV_HOSTS.some(host => library.url.startsWith(host));
                });
                const instance = await pending.get(key);
                pending.delete(key);
                if (!withLocalURLs && shouldCache) {
                    cache.set(key, instance);
                }
                return instance;
            } catch (e) {
                pending.delete(key);
                throw e;
            }
        },
    };
}
exports.createRegistryInstanceCache = createRegistryInstanceCache;
//# sourceMappingURL=createRegistryInstanceCache.js.map