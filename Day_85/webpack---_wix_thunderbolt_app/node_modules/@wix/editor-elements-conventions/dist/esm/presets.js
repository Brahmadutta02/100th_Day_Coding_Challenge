import {
    findByPartName,
    ThunderboltPreviewParts
} from './helpers';
export function getReactHOTComposeFunction({
    internalPart,
} = {}) {
    return {
        isDev: true,
        transform: ({
            value,
            componentName
        }) => {
            if (process.env.IGNORE_HMR) {
                return {
                    imports: [],
                    value,
                };
            }
            return {
                imports: [{
                    moduleName: '@wix/component-hot-loader',
                    specifiers: [{
                        type: 'named',
                        value: 'hot',
                    }, ],
                }, ],
                value: internalPart ?
                    `{...${value}, ['${internalPart}']: hot(module, ${value}['${internalPart}'], '${componentName}')}` :
                    `hot(module, ${value}, '${componentName}')`,
            };
        },
    };
}
export function getHotProxyComposeFunction() {
    return {
        isDev: true,
        transform: ({
            value,
            componentName,
            part
        }) => {
            if (process.env.IGNORE_HMR) {
                return {
                    imports: [],
                    value,
                };
            }
            return {
                imports: [{
                    moduleName: '@wix/editor-elements-integrations',
                    specifiers: [{
                        type: 'named',
                        value: 'hotProxy',
                    }, ],
                }, ],
                value: `hotProxy(module, ${value}, '${componentName}_${part}')`,
            };
        },
    };
}
export function getPreviewWrapperComposeFunction() {
    return {
        transform: ({
            value,
            entries
        }) => {
            const previewWrapperEntry = findByPartName(entries, ThunderboltPreviewParts.PreviewWrapper);
            if (previewWrapperEntry) {
                const {
                    moduleName
                } = previewWrapperEntry;
                return {
                    value: `${moduleName}(${value})`,
                };
            }
            const previewMapperEntry = findByPartName(entries, ThunderboltPreviewParts.PreviewMapper);
            if (previewMapperEntry) {
                return {
                    imports: [{
                        moduleName: '@wix/editor-elements-preview-utils',
                        specifiers: [{
                            type: 'named',
                            value: 'createPreviewFallback',
                        }, ],
                    }, ],
                    value: `createPreviewFallback(${value})`,
                };
            }
            return {
                value,
            };
        },
    };
}
//# sourceMappingURL=presets.js.map